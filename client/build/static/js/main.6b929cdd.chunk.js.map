{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/layout/MainMenu/MainMenu.js","components/common/Logo/Logo.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/PostsPattern/PostsPattern.js","components/features/withPage/withPage.js","components/features/Posts/Posts.js","components/common/PageTitle/PageTitle.js","components/pages/Home/HomePage.js","components/features/Posts/PostsContainer.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/FormOfPosts/FormOfPosts.js","components/features/withPost/withPost.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/features/AddPost/AddPost.js","components/features/SinglePostForm/SinglePostForm.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/features/EditPost/EditPost.js","components/features/EditPost/EditPostContainer.js","App.js","redux/store.js","index.js"],"names":["PageContainer","_ref","children","react_default","a","createElement","className","MainMenu","links","location","map","link","index","key","react_router_dom","pathname","path","to","title","withRouter","props","MainMenu_MainMenu_MainMenu","Logo","NavBar","state","this","style","styles","common_Logo_Logo","layout_MainMenu_MainMenu","React","Component","MainLayout","layout_PageContainer_PageContainer","features_NavBar_NavBar","API_URL","process","createActionName","name","concat","getRequest","_ref3","posts","request","getSinglePost","_ref4","singlePost","getPages","_ref5","Math","ceil","amount","postsPerPage","LOAD_POSTS","START_REQUEST","END_REQUEST","ERROR_REQUEST","LOAD_SINGLE_POST","RESET_REQUEST","LOAD_POSTS_PAGE","startRequest","type","endRequest","errorRequest","error","resetRequest","loadSinglePost","payload","loadPostsByPage","initialState","data","pending","success","presentPage","initialPage","loadSinglePostRequest","id","_ref9","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","res","wrap","_context2","prev","next","axios","get","sent","t0","message","stop","_x2","apply","arguments","Button","_ref$variant","variant","otherProps","objectWithoutProperties","assign","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","content","cutText","author","common_SmallTitle_SmallTitle","common_HtmlBox_HtmlBox","common_Button_Button","PostsList","post","features_PostSummary_PostSummary","Spinner","react_animated_css_lib","animationIn","animationOut","Alert","index_esm","icon","Pagination","changePage","newPage","onPageChange","_this","_this$props","pages","onClick","toConsumableArray","Array","el","page","PostsPattern","pagination","loadPostsPage","common_Spinner_Spinner","length","common_Alert_Alert","features_PostsList_PostsList","common_Pagination_Pagination","withPage","WrappedComponent","_React$Component","_temp","_getPrototypeOf2","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","maxLength","lastIndex","split","lastIndexOf","substr","inherits","createClass","value","_this$state","_this$props2","features_PostsPattern_PostsPattern","PageTitle","common_PageTitle_PageTitle","mapStateToProps","_ref6","_ref7","mapDispatchToProps","postsPage","_ref12","_callee5","startAt","limit","_context5","_x5","loadPostsByPageRequest","connect","Posts","Home","HomePage","PostsCounter","postsCount","_ref2","loadPosts","_ref8","_callee","_context","_x","PostsPage","PostsCounterContainer","PostsContainer","ContactPage","NotFoundPage","TextField","label","onChange","SectionTitle","FormOfPosts","handleChange","handleEditor","formFunc","onSubmit","common_TextField_TextField","common_SectionTitle_SectionTitle","react_medium_editor_default","text","options","placeholder","toolbar","buttons","withPost","e","setState","objectSpread","defineProperty","target","fillUpState","addPost","preventDefault","features_FormOfPosts_FormOfPosts","_ref10","_callee3","_context3","_x3","addPostRequest","PostForm","AddPost","PostFormContainer","SinglePostForm","keys","react_facebook_lib","appId","href","SinglePostForm_SinglePostForm","SinglePost","loadPost","match","params","features_SinglePostForm_SinglePostForm","edited","editPost","_this$props3","_ref11","_callee4","_context4","_x4","editPostRequest","EditPost","App","layout_MainLayout_MainLayout","react_router","exact","component","Contact","NotFound","rootReducer","combineReducers","statePart","undefined","action","store","createStore","applyMiddleware","thunk","require","config","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"sjBAeeA,UAVO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACZJ,aCACK,UAAW,SAAAN,GAAA,IAAGO,EAAHP,EAAGO,MAAOC,EAAVR,EAAUQ,SAAV,OAEfN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAEVE,EAAME,IAAI,SAACC,EAAMC,GAAP,OACVT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GACPT,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMR,UAAYG,EAASM,WAAaJ,EAAKK,KAAQ,SAAa,GAAIC,GAAIN,EAAKK,MAAOL,EAAKO,aAcpFC,cAAW,SAAAC,GAAK,OAAIjB,EAAAC,EAAAC,cAACgB,EAAaD,KCnBlCE,UAJF,SAAArB,KAAGO,MAAHP,EAAUQ,SAAV,OACXN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,gCCwBaiB,6MAvBbC,MAAQ,CACNhB,MAAO,CACL,CAAEQ,KAAM,IAAKE,MAAO,QACpB,CAAEF,KAAM,aAAcE,MAAO,YAC7B,CAAEF,KAAM,SAAUE,MAAO,SACzB,CAAEF,KAAM,WAAYE,MAAO,qFAKtB,IACCV,EAAUiB,KAAKD,MAAfhB,MAER,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASoB,MAAOC,KAC7BxB,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,CAAUrB,MAAOA,YAjBJsB,IAAMC,WCQZC,EATI,SAAA/B,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACjBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4B,EAAD,KACE9B,EAAAC,EAAAC,cAAC6B,EAAD,MACChC,uECRMiC,EAAUC,4BCKjBC,EAAmB,SAAAC,GAAI,aAAAC,OADT,QACS,KAAAA,OAA0BD,IAM1CE,EAAa,SAAAC,GAAA,OAAAA,EAAGC,MAAkBC,SAClCC,EAAgB,SAAAC,GAAA,OAAAA,EAAGH,MAAkBI,YACrCC,EAAW,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,MAAH,OAAeO,KAAKC,KAAKR,EAAMS,OAAST,EAAMU,eAMzDC,EAAahB,EAAiB,cAC9BiB,EAAgBjB,EAAiB,iBACjCkB,EAAclB,EAAiB,eAC/BmB,EAAgBnB,EAAiB,iBACjCoB,EAAmBpB,EAAiB,oBACpCqB,EAAgBrB,EAAiB,iBACjCsB,EAAkBtB,EAAiB,mBAInCuB,EAAe,iBAAO,CAAEC,KAAMP,IAC9BQ,EAAa,iBAAO,CAAED,KAAMN,IAC5BQ,EAAe,SAAAC,GAAK,MAAK,CAAEA,QAAOH,KAAML,IACxCS,EAAe,iBAAO,CAACJ,KAAMH,IAC7BQ,EAAiB,SAAAC,GAAO,MAAK,CAAEA,UAASN,KAAMJ,IAC9CW,EAAkB,SAAAD,GAAO,MAAK,CAAEA,UAASN,KAAMF,IAItDU,EAAe,CACjBC,KAAM,GACN3B,QAAS,CACL4B,SAAS,EACTP,MAAO,KACPQ,QAAS,MAEb1B,WAAY,GACZK,OAAQ,EACRsB,YAAa,EACbC,YAAa,GAsBJC,EAAwB,SAACC,GAClC,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAA5E,EAAA6E,KAAO,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAA5E,EAAAiF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEHL,EAASvB,KAFN0B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIiBC,IAAMC,IAAN,GAAAnD,OAAaJ,EAAb,WAAAI,OAA8BqC,IAJ/C,cAIKQ,EAJLE,EAAAK,KAAAL,EAAAE,KAAA,EAKOL,EAASjB,EAAekB,EAAId,KAAK,KALxC,OAMCa,EAASrB,KANVwB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAQCH,EAASpB,EAAauB,EAAAM,GAAEC,UARzB,yBAAAP,EAAAQ,SAAAZ,EAAA,kBAAP,gBAAAa,GAAA,OAAAlB,EAAAmB,MAAAvE,KAAAwE,YAAA,gBCxDWC,UAVA,SAAAjG,GAAA,IAAAkG,EAAAlG,EAAGmG,eAAH,IAAAD,EAAa,GAAbA,EAAiBjG,EAAjBD,EAAiBC,SAAamG,EAA9BvB,OAAAwB,EAAA,EAAAxB,CAAA7E,EAAA,+BACbE,EAAAC,EAAAC,cAAA,SAAAyE,OAAAyB,OAAA,GAAaF,EAAb,CAA0B/F,UAAS,kBAAAiC,OAAqB6D,KACpDlG,KCOSsG,UAVI,SAAAvG,GAAA,IAAGC,EAAHD,EAAGC,SAAamG,EAAhBvB,OAAAwB,EAAA,EAAAxB,CAAA7E,EAAA,qBACjBE,EAAAC,EAAAC,cAAA,KAAAyE,OAAAyB,OAAA,GAAQF,EAAR,CAAoB/F,UAAU,gBAC1BJ,wBCQSuG,GAVC,SAAAxG,GAAA,IAAGC,EAAHD,EAAGC,SAAamG,EAAhBvB,OAAAwB,EAAA,EAAAxB,CAAA7E,EAAA,qBACZE,EAAAC,EAAAC,cAAA,OAAAyE,OAAAyB,OAAA,GAAUF,EAAV,CAAsB/F,UAAU,aAC7BoG,KAAgBxG,KC8BRyG,WA1BK,SAAA1G,GAAA,IAAG2E,EAAH3E,EAAG2E,GAAI1D,EAAPjB,EAAOiB,MAAO0F,EAAd3G,EAAc2G,QAASC,EAAvB5G,EAAuB4G,QAASC,EAAhC7G,EAAgC6G,OAAhC,OAClB3G,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAAC0G,EAAD,KAAa7F,GACbf,EAAAC,EAAAC,cAAC2G,GAAD,KAAUH,EAAQD,EAAS,MAC3BzG,EAAAC,EAAAC,cAAA,oBAAYyG,GACZ3G,EAAAC,EAAAC,cAAC4G,EAAD,CAAQb,QAAQ,WACdjG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMG,GAAI,SAAW2D,GAArB,cAIFzE,EAAAC,EAAAC,cAAC4G,EAAD,CAAQb,QAAQ,WACdjG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMG,GAAI,cAAgB2D,GAA1B,YCJSsC,GAZG,SAAAjH,GAAA,IAAGyC,EAAHzC,EAAGyC,MAAOmE,EAAV5G,EAAU4G,QAAV,OAChB1G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WAASC,UAAU,cAChBoC,EAAMhC,IAAI,SAAAyG,GAAI,OAAIhH,EAAAC,EAAAC,cAAC+G,GAADtC,OAAAyB,OAAA,CAAaM,QAASA,EAAShG,IAAKsG,EAAKvC,IAAQuC,kBCQ3DE,WAXC,kBACdlH,EAAAC,EAAAC,cAACiH,GAAA,SAAD,CAAUC,YAAY,SAASC,aAAa,WAC1CrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,yBC6BSoH,WAjCD,SAAAxH,GAA+C,IAAAkG,EAAAlG,EAA5CmG,eAA4C,IAAAD,EAAlC,GAAkCA,EAA9BjG,EAA8BD,EAA9BC,SAAamG,EAAiBvB,OAAAwB,EAAA,EAAAxB,CAAA7E,EAAA,wBAiB3D,OACEE,EAAAC,EAAAC,cAACiH,GAAA,SAAD,CAAUC,YAAY,SAASC,aAAa,WAC1CrH,EAAAC,EAAAC,cAAA,MAAAyE,OAAAyB,OAAA,GAASF,EAAT,CAAqB/F,UAAS,gBAAAiC,OAAkB6D,KAjBvC,WACX,OAAOA,GACL,IAAK,OACH,OAAOjG,EAAAC,EAAAC,cAACqH,GAAA,EAAD,MACT,IAAK,UACH,OAAOvH,EAAAC,EAAAC,cAACqH,GAAA,EAAD,MACT,IAAK,UAEL,IAAK,QACH,OAAOvH,EAAAC,EAAAC,cAACqH,GAAA,EAAD,MACT,QACE,OAAOvH,EAAAC,EAAAC,cAACqH,GAAA,EAAD,OAONC,GACDxH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeJ,OCwBxB0H,sNA7CXC,WAAa,SAACC,IAGVC,EAFyBC,EAAK5G,MAAtB2G,cAEKD,4EAGR,IAAAG,EAE0BxG,KAAKL,MAA5B8G,EAFHD,EAEGC,MAAOzD,EAFVwD,EAEUxD,YACPoD,EAAepG,KAAfoG,WACR,OACI1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAEVH,EAAAC,EAAAC,cAAA,QAAM8H,QAAS,WAAON,EAAWpD,EAAc,KAC1B,IAAhBA,EAAoB,IAAM,IAG9BK,OAAAsD,EAAA,EAAAtD,CAAIuD,MAAMH,IAAQxH,IAAI,SAAC4H,EAAIC,GAAL,OACnBpI,EAAAC,EAAAC,cAAA,MACIQ,MAAO0H,EACPJ,QAAS,WAAQN,EAAWU,IAC5BjI,UAAS,yBAAAiC,OAA6BgG,IAAU9D,EAAe,kCAAoC,KAClG8D,KAITpI,EAAAC,EAAAC,cAAA,QAAM8H,QAAS,WAAON,EAAWpD,EAAc,KAC1CA,IAAgByD,GAAyB,IAAhBzD,EAAoB,IAAM,aA/BnD3C,IAAMC,YCgChByG,oLA1BF,IAAAP,EAC8ExG,KAAKL,MAAhFsB,EADHuF,EACGvF,MAAOC,EADVsF,EACUtF,QAASuF,EADnBD,EACmBC,MAAOzD,EAD1BwD,EAC0BxD,YAAagE,EADvCR,EACuCQ,WAAY5B,EADnDoB,EACmDpB,QAAS6B,EAD5DT,EAC4DS,cAEjE,OAAI/F,EAAQ4B,SAA+B,OAApB5B,EAAQ6B,QAAyBrE,EAAAC,EAAAC,cAACsI,GAAD,MAC9ChG,EAAQ4B,SAA6B,OAAlB5B,EAAQqB,OAC3BrB,EAAQ4B,SAAW5B,EAAQ6B,SAA4B,IAAjB9B,EAAMkG,OAAqBzI,EAAAC,EAAAC,cAACwI,GAAD,CAAOzC,QAAS,OAAQlG,SAAU,cACnGyC,EAAQ4B,SAAW5B,EAAQ6B,SAAW9B,EAAMkG,OAAS,EAC3DzI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyI,GAAD,CAAWpG,MAAOA,EAAOmE,QAASA,IAChC4B,EAAatI,EAAAC,EAAAC,cAAC0I,GAAD,CAAYtE,YAAaA,EAAayD,MAAOA,EAAOH,aAAcW,IAAoB,SAHxG,EAFuDvI,EAAAC,EAAAC,cAACwI,GAAD,CAAOzC,QAAS,QAASlG,SAAUyC,EAAQqB,eANpFlC,IAAMC,WCkDlBiH,OAzDf,SAAkBC,EAAkB7F,EAAcqF,GAC9C,gBAAAS,GAAA,SAAAC,IAAA,IAAAC,EAAApB,EAAAlD,OAAAuE,EAAA,EAAAvE,CAAArD,KAAA0H,GAAA,QAAAG,EAAArD,UAAA2C,OAAAW,EAAA,IAAAlB,MAAAiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvD,UAAAuD,GAAA,OAAAxB,EAAAlD,OAAA2E,EAAA,EAAA3E,CAAArD,MAAA2H,EAAAtE,OAAA4E,EAAA,EAAA5E,CAAAqE,IAAAQ,KAAA3D,MAAAoD,EAAA,CAAA3H,MAAAc,OAAAgH,MAEI/H,MAAQ,CACJiH,WAAYA,EACZrF,aAAcA,GAJtB4E,EAeIU,cAAgB,SAACH,IAGbnE,EAF4B4D,EAAK5G,MAAzBgD,iBAEQmE,EADSP,EAAKxG,MAAtB4B,eAjBhB4E,EAqBInB,QAAU,SAACD,EAASgD,GAEhB,GAAIA,EAAY,EACd,MAAO,QACF,GAAIA,EAAYhD,EAAQgC,OAAQ,CACrC,IACMiB,EADMjD,EAAQkD,MAAM,IACJC,YAAY,IAAKH,GAEvC,OADmBhD,EAAQoD,OAAO,EAAGH,GACjB,MAEpB,OAAOjD,GA/BjBoB,EAAA,OAAAlD,OAAAmF,EAAA,EAAAnF,CAAAqE,EAAAD,GAAApE,OAAAoF,EAAA,EAAApF,CAAAqE,EAAA,EAAAtI,IAAA,oBAAAsJ,MAAA,WAOwB,IAAAlC,EACuCxG,KAAKL,MAApDgD,EADQ6D,EACR7D,gBAAiBH,EADTgE,EACShE,aAAcS,EADvBuD,EACuBvD,YAC/BtB,EAAiB3B,KAAKD,MAAtB4B,aAERa,IACAG,EAAiBM,GAAc,EAAiBtB,KAZxD,CAAAvC,IAAA,SAAAsJ,MAAA,WAoCa,IAAAC,EACgC3I,KAAKD,MAAlCiH,EADH2B,EACG3B,WAAYrF,EADfgH,EACehH,aADfiH,EAE0C5I,KAAKL,MAA5CsB,EAFH2H,EAEG3H,MAAOC,EAFV0H,EAEU1H,QAASuF,EAFnBmC,EAEmBnC,MAAOzD,EAF1B4F,EAE0B5F,YACvBiE,EAA2BjH,KAA3BiH,cAAe7B,EAAYpF,KAAZoF,QAEvB,OAAO1G,EAAAC,EAAAC,cAAC4I,EAADnE,OAAAyB,OAAA,CACHkC,WAAYA,EACZrF,aAAcA,EACdV,MAAOA,EACPC,QAASA,EACTuF,MAAOA,EACPzD,YAAaA,EACbiE,cAAeA,EACf7B,QAASA,GACLpF,KAAKL,YAlDrB+H,EAAA,CAAqBrH,IAAMC,YCuBhBiH,MApBD,SAAC5H,GAAU,IAEfsB,EAA2EtB,EAA3EsB,MAAOC,EAAoEvB,EAApEuB,QAASuF,EAA2D9G,EAA3D8G,MAAOzD,EAAoDrD,EAApDqD,YAAagE,EAAuCrH,EAAvCqH,WAAYC,EAA2BtH,EAA3BsH,cAAe7B,EAAYzF,EAAZyF,QAEvE,OACE1G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiK,GAAD,CAAc5H,MAAOA,EAAOC,QAASA,EAASuF,MAAOA,EAAOzD,YAAaA,EAAagE,WAAYA,EAAYC,cAAeA,EAAe7B,QAASA,MAc5H,IAAI,GCXpB0D,WAVG,SAAAtK,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAChBC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVJ,KCsBS8I,MAtBE,SAAC5H,GAAU,IAElBsB,EAA2EtB,EAA3EsB,MAAOC,EAAoEvB,EAApEuB,QAASuF,EAA2D9G,EAA3D8G,MAAOzD,EAAoDrD,EAApDqD,YAAagE,EAAuCrH,EAAvCqH,WAAYC,EAA2BtH,EAA3BsH,cAAe7B,EAAYzF,EAAZyF,QAEvE,OACE1G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmK,GAAD,aACArK,EAAAC,EAAAC,cAACiK,GAAD,CAAc5H,MAAOA,EAAOC,QAASA,EAASuF,MAAOA,EAAOzD,YAAaA,EAAagE,WAAYA,EAAYC,cAAeA,EAAe7B,QAASA,MAezH,GAAG,GCvB/B4D,GAAkB,SAAAjJ,GAAK,MAAK,CAChCkB,OdEsBzC,EcFNuB,EdEMvB,EAAGyC,MAAkB4B,McD3C3B,QAASH,EAAWhB,GACpB0G,MAAOnF,EAASvB,GAChBiD,adI4BiG,EcJAlJ,EdIAkJ,EAAGhI,MAAkB+B,acHjDC,adI4BiG,EcJAnJ,EdIAmJ,EAAGjI,MAAkBgC,cAArB,IAAAiG,EADAD,EALNzK,GcKlB2K,GAAqB,SAAAzF,GAAQ,MAAK,CACtCf,gBAAiB,SAACmE,EAAMnF,GAAP,OAAwB+B,EdqGL,SAACoD,EAAMsC,GACzC,sBAAAC,EAAAhG,OAAAC,EAAA,EAAAD,CAAAE,EAAA5E,EAAA6E,KAAO,SAAA8F,EAAM5F,GAAN,IAAA/B,EAAA4H,EAAAC,EAAA7F,EAAAjB,EAAA,OAAAa,EAAA5E,EAAAiF,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,cAEHL,EAASvB,KAFNsH,EAAA3F,KAAA,EAOOyF,GAAWzC,EAAO,IAFlBnF,EAAeyH,GAGfI,EAAQ7H,EARf8H,EAAA1F,KAAA,EAUiBC,IAAMC,IAAN,GAAAnD,OAAaJ,EAAb,iBAAAI,OAAoCyI,EAApC,KAAAzI,OAA+C0I,IAVhE,OAUK7F,EAVL8F,EAAAvF,KAYOxB,EAAU,CAChBzB,MAAO0C,EAAId,KAAK5B,MAChBS,OAAQiC,EAAId,KAAKnB,OACjBC,eACAqB,YAAa8D,GAGbpD,EAASf,EAAgBD,IACzBgB,EAASrB,KApBVoH,EAAA1F,KAAA,iBAAA0F,EAAA3F,KAAA,GAAA2F,EAAAtF,GAAAsF,EAAA,SAuBC/F,EAASpB,EAAamH,EAAAtF,GAAEC,UAvBzB,yBAAAqF,EAAApF,SAAAiF,EAAA,kBAAP,gBAAAI,GAAA,OAAAL,EAAA9E,MAAAvE,KAAAwE,YAAA,GctGgDmF,CAAuB7C,EAAMnF,KAC/Ea,aAAc,kBAAMkB,EAASlB,QAGhBoH,eAAQZ,GAAiBG,GAAzBS,CAA6CC,IAC/CC,GAAOF,YAAQZ,GAAiBG,GAAzBS,CAA6CG,ICSlDC,oLAxBJ,IAAAxD,EACyBxG,KAAKL,MAA7BsK,EADDzD,EACCyD,WAER,OAHOzD,EACatF,QAER6B,QAERrE,EAAAC,EAAAC,cAAA,4BAAqBqL,EAAa,EAAIA,EAAa,YAG9C,YAVc5J,IAAMC,WCUlBsJ,eATS,SAAA7J,GAAK,MAAK,CAChCkK,YhBK8BC,EgBLDnK,EhBKCmK,EAAGjJ,MAAkB4B,KAAKsE,QgBJxDjG,QAASH,EAAWhB,IhBIU,IAAAmK,GgBDL,SAAAxG,GAAQ,MAAK,CACtCyG,UAAW,kBAAMzG,EhB4Cf,eAAA0G,EAAA/G,OAAAC,EAAA,EAAAD,CAAAE,EAAA5E,EAAA6E,KAAO,SAAA6G,EAAM3G,GAAN,IAAAC,EAAA,OAAAJ,EAAA5E,EAAAiF,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,cAEHL,EAASvB,KAFNmI,EAAAxG,KAAA,EAAAwG,EAAAvG,KAAA,EAKiBC,IAAMC,IAAN,GAAAnD,OAAaJ,EAAb,WALjB,OAKKiD,EALL2G,EAAApG,KAMCR,EAhCyB,CAAEhB,QAgCRiB,EAAId,KAhCaT,KAAMR,IAiC1C8B,EAASrB,KAPViI,EAAAvG,KAAA,gBAAAuG,EAAAxG,KAAA,EAAAwG,EAAAnG,GAAAmG,EAAA,SAUC5G,EAASpB,EAAagI,EAAAnG,GAAEC,UAVzB,yBAAAkG,EAAAjG,SAAAgG,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAA7F,MAAAvE,KAAAwE,YAAA,OgBzCWoF,CAA6CI,ICC7CQ,GARG,kBAChB9L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmK,GAAD,mBACArK,EAAAC,EAAAC,cAAC6L,GAAD,MACA/L,EAAAC,EAAAC,cAAC8L,GAAD,QCKWC,GAXK,kBAClBjM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmK,GAAD,gBACArK,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,qCAEAF,EAAAC,EAAAC,cAAA,0CCHWgM,GANM,kBACnBlM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BCcWiM,WAbG,SAAArM,GAAA,IAAGkK,EAAHlK,EAAGkK,MAAOoC,EAAVtM,EAAUsM,MAAOC,EAAjBvM,EAAiBuM,SAAanG,EAA9BvB,OAAAwB,EAAA,EAAAxB,CAAA7E,EAAA,qCAChBE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAS,qBAAAiC,QAAyB4H,EAAMvB,OAAS,EAAK,yBAA2B,KAAO2D,GAC9FpM,EAAAC,EAAAC,cAAA,QAAAyE,OAAAyB,OAAA,GAAWF,EAAX,CAAuB8D,MAAOA,EAAOqC,SAAUA,EAAUlM,UAAU,0BCOxDmM,WAVM,SAAAxM,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OACnBC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVJ,mCCsDSwM,kBA/CK,SAACtL,GAAU,IAEnB+F,EAAwD/F,EAAxD+F,KAAMxE,EAAkDvB,EAAlDuB,QAASgK,EAAyCvL,EAAzCuL,aAAcC,EAA2BxL,EAA3BwL,aAAcC,EAAazL,EAAbyL,SAEnD,OAAGlK,EAAQqB,MAAc7D,EAAAC,EAAAC,cAACwI,GAAD,CAAOzC,QAAQ,SAASzD,EAAQqB,OACjDrB,EAAQ4B,QAAgBpE,EAAAC,EAAAC,cAACsI,GAAD,MAG5BxI,EAAAC,EAAAC,cAAA,QAAMyM,SAAUD,GAEZ1M,EAAAC,EAAAC,cAAC0M,GAAD,CACIR,MAAM,QACNpC,MAAOhD,EAAKjG,MACZsL,SAAUG,EACVrK,KAAK,UAGTnC,EAAAC,EAAAC,cAAC0M,GAAD,CACIR,MAAM,SACNpC,MAAOhD,EAAKL,OACZ0F,SAAUG,EACVrK,KAAK,WAGTnC,EAAAC,EAAAC,cAAC2M,GAAD,0BAEA7M,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CACIE,UAAU,iBACV4M,KAAM/F,EAAKP,QACX4F,SAAUI,EACVO,QAAS,CAAEC,aAAa,EAAOC,QAAS,CAAEC,QAAS,CAAC,OAAQ,SAAU,YAAa,SAAU,KAAM,UAGvGnN,EAAAC,EAAAC,cAAC4G,EAAD,CAAQb,QAAQ,WAAhB,wBCdGmH,OA/Bf,SAAkBtE,GACd,gBAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAApB,EAAAlD,OAAAuE,EAAA,EAAAvE,CAAArD,KAAA0H,GAAA,QAAAG,EAAArD,UAAA2C,OAAAW,EAAA,IAAAlB,MAAAiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAAvD,UAAAuD,GAAA,OAAAxB,EAAAlD,OAAA2E,EAAA,EAAA3E,CAAArD,MAAA2H,EAAAtE,OAAA4E,EAAA,EAAA5E,CAAAqE,IAAAQ,KAAA3D,MAAAoD,EAAA,CAAA3H,MAAAc,OAAAgH,MAEI/H,MAAQ,CACJ2F,KAAM,CACNjG,MAAO,GACP4F,OAAQ,GACRF,QAAS,KANjBoB,EAUI2E,aAAe,SAACa,GAAM,IACVrG,EAASa,EAAKxG,MAAd2F,KACRa,EAAKyF,SAAS,CAAEtG,KAAKrC,OAAA4I,EAAA,EAAA5I,CAAA,GAAMqC,EAAPrC,OAAA6I,GAAA,EAAA7I,CAAA,GAAc0I,EAAEI,OAAOtL,KAAOkL,EAAEI,OAAOzD,WAZnEnC,EAeI4E,aAAe,SAACM,GAAS,IACb/F,EAASa,EAAKxG,MAAd2F,KACRa,EAAKyF,SAAS,CAAEtG,KAAKrC,OAAA4I,EAAA,EAAA5I,CAAA,GAAMqC,EAAP,CAAaP,QAASsG,OAjBlDlF,EAoBI6F,YAAc,SAACvJ,GACX0D,EAAKyF,SAAS,CAAEtG,KAAM,CAAEjG,MAAOoD,EAAKpD,MAAO4F,OAAQxC,EAAKwC,OAAQF,QAAStC,EAAKsC,YArBtFoB,EAAA,OAAAlD,OAAAmF,EAAA,EAAAnF,CAAAqE,EAAAD,GAAApE,OAAAoF,EAAA,EAAApF,CAAAqE,EAAA,EAAAtI,IAAA,SAAAsJ,MAAA,WAyBQ,OAAOhK,EAAAC,EAAAC,cAAC4I,EAADnE,OAAAyB,OAAA,CAAkBY,KAAM1F,KAAKD,MAAM2F,KAAMwF,aAAclL,KAAKkL,aAAcC,aAAcnL,KAAKmL,aAAciB,YAAapM,KAAKoM,aAAiBpM,KAAKL,YAzBlK+H,EAAA,CAAqBrH,IAAMC,YCsChBwL,iNA1BbO,QAAU,SAACN,GAAM,IAAAvF,EACWD,EAAK5G,MAAvB0M,EADO7F,EACP6F,QAAS3G,EADFc,EACEd,KAEjBqG,EAAEO,iBACFD,EAAQ3G,wFAPRlD,EADyBxC,KAAKL,MAAtB6C,iDAWD,IAEC6J,EAAYrM,KAAZqM,QAFDzD,EAG+C5I,KAAKL,MAAnDuB,EAHD0H,EAGC1H,QAASwE,EAHVkD,EAGUlD,KAAMwF,EAHhBtC,EAGgBsC,aAAcC,EAH9BvC,EAG8BuC,aAErC,OAAGjK,EAAQ6B,QAAgBrE,EAAAC,EAAAC,cAACwI,GAAD,CAAOzC,QAAQ,WAAf,wBACfjG,EAAAC,EAAAC,cAAC2N,GAAD,CAAanB,SAAUiB,EAASnL,QAASA,EAASwE,KAAMA,EAAMwF,aAAcA,EAAcC,aAAcA,WApBjG9K,IAAMC,YCMdsJ,eATS,SAAA7J,GAAK,MAAK,CAChCmB,QAASH,EAAWhB,KAGK,SAAA2D,GAAQ,MAAK,CACtC2I,QAAS,SAAC3G,GAAD,OAAUhC,EzB0ES,SAACgC,GAC3B,sBAAA8G,EAAAnJ,OAAAC,EAAA,EAAAD,CAAAE,EAAA5E,EAAA6E,KAAO,SAAAiJ,EAAM/I,GAAN,OAAAH,EAAA5E,EAAAiF,KAAA,SAAA8I,GAAA,cAAAA,EAAA5I,KAAA4I,EAAA3I,MAAA,cAEHL,EAASvB,KAFNuK,EAAA5I,KAAA,EAAA4I,EAAA3I,KAAA,EAKiBC,IAAM0B,KAAN,GAAA5E,OAAcJ,EAAd,UAA+BgF,GALhD,OAAAgH,EAAAxI,KAMCR,EAASrB,KANVqK,EAAA3I,KAAA,gBAAA2I,EAAA5I,KAAA,EAAA4I,EAAAvI,GAAAuI,EAAA,SASChJ,EAASpB,EAAaoK,EAAAvI,GAAEC,UATzB,yBAAAsI,EAAArI,SAAAoI,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAAjI,MAAAvE,KAAAwE,YAAA,GyB3E0BoI,CAAelH,KAC3ClD,aAAc,kBAAMkB,EAASlB,QAGhBoH,CAA6CiD,ICL7CC,GANC,kBACdpO,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmO,GAAD,iBCQEC,GAAiB,SAACrN,GAAU,IAEtB+F,EAA4B/F,EAA5B+F,KAAMxE,EAAsBvB,EAAtBuB,QAASlC,EAAaW,EAAbX,SAEvB,OAAIkC,EAAQ4B,SAA+B,OAApB5B,EAAQ6B,QAAyBrE,EAAAC,EAAAC,cAACsI,GAAD,MAC9ChG,EAAQ4B,SAA6B,OAAlB5B,EAAQqB,OAC3BrB,EAAQ4B,SAAW5B,EAAQ6B,SAAwC,IAA7BM,OAAO4J,KAAKvH,GAAMyB,OAAqBzI,EAAAC,EAAAC,cAACwI,GAAD,CAAOzC,QAAS,OAAQlG,SAAU,cAC/GyC,EAAQ4B,SAAW5B,EAAQ6B,SAAWM,OAAO4J,KAAKvH,GAAMyB,OAAS,EAEzEzI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmK,GAAD,KAAarD,EAAKjG,OAClBf,EAAAC,EAAAC,cAAA,oBAAa8G,EAAKL,QAClB3G,EAAAC,EAAAC,cAAC2G,GAAD,KAAWG,EAAKP,SAEhBzG,EAAAC,EAAAC,cAACsO,GAAA,iBAAD,CAAkBC,MAAOxM,oBACvBjC,EAAAC,EAAAC,cAACsO,GAAA,SAAD,CAAUE,KAAI,GAAAtM,O5B3BAH,yB4B2BA,KAAAG,OAAiB9B,EAASM,YACxCZ,EAAAC,EAAAC,cAACsO,GAAA,YAAD,CAAaE,KAAI,GAAAtM,O5B5BHH,yB4B4BG,KAAAG,OAAiB9B,EAASM,WAA3C,gBATD,EAFuDZ,EAAAC,EAAAC,cAACwI,GAAD,CAAOzC,QAAS,QAASlG,SAAUyC,EAAQqB,SAyB5F7C,eAAW,SAAAC,GAAK,OAAIjB,EAAAC,EAAAC,cAACyO,GAAmB1N,KChBxC2N,+LApBO,IAAA9G,EACiBxG,KAAKL,MAAhC4N,EADU/G,EACV+G,UACR/K,EAFkBgE,EACAhE,gBAElB+K,EAASvN,KAAKL,MAAM6N,MAAMC,OAAOtK,qCAG1B,IAAAyF,EACmB5I,KAAKL,MAAvB+F,EADDkD,EACClD,KAAMxE,EADP0H,EACO1H,QAEd,OAAOxC,EAAAC,EAAAC,cAAC8O,GAAD,CAAgBhI,KAAMA,EAAMxE,QAASA,WAXvBb,IAAMC,WCShBsJ,eAVS,SAAA7J,GAAK,MAAK,CAC9B2F,KAAMvE,EAAcpB,GACpBmB,QAASH,EAAWhB,KAGK,SAAA2D,GAAQ,MAAK,CACtC6J,SAAU,SAACpK,GAAD,OAAQO,EAASR,EAAsBC,KACjDX,aAAc,kBAAMkB,EAASlB,QAGlBoH,CAA6C0D,ICmC7CxB,iNAvCX/L,MAAQ,CACJ4N,QAAQ,KAWZC,SAAW,SAAC7B,GAAM,IAAAvF,EACsBD,EAAK5G,MAAjCiO,EADMpH,EACNoH,SAAU1M,EADJsF,EACItF,QAASwE,EADbc,EACad,KAI3B,GAFAqG,EAAEO,iBACFsB,EAASlI,EAAMa,EAAK5G,MAAM6N,MAAMC,OAAOtK,IACpCjC,EAAQ6B,QAAS,OAAOwD,EAAKyF,SAAS,CAAE2B,QAAQ,uNAZH3N,KAAKL,MAA7C4N,aAAU/K,iBAAc4J,gBAChC5J,aACM+K,EAASvN,KAAKL,MAAM6N,MAAMC,OAAOtK,kBAC/B9B,EAAerB,KAAKL,MAApB0B,oBACF+K,EAAY/K,sIAYb,IAAAwM,EACiD7N,KAAKL,MAAnDuB,EADH2M,EACG3M,QAASgK,EADZ2C,EACY3C,aAAcC,EAD1B0C,EAC0B1C,aAAczF,EADxCmI,EACwCnI,KACrCiI,EAAW3N,KAAKD,MAAhB4N,OACAC,EAAa5N,KAAb4N,SAER,OAAG1M,EAAQ6B,SAAW4K,EAAejP,EAAAC,EAAAC,cAACwI,GAAD,CAAOzC,QAAQ,WAAf,wBACzBjG,EAAAC,EAAAC,cAAC2N,GAAD,CAAanB,SAAUwC,EAAU1M,QAASA,EAASwE,KAAMA,EAAMwF,aAAcA,EAAcC,aAAcA,WA5BtG9K,IAAMC,YCMdsJ,eAXS,SAAA7J,GAAK,MAAK,CAC9BsB,WAAYF,EAAcpB,GAC1BmB,QAASH,EAAWhB,KAGG,SAAA2D,GAAQ,MAAK,CACpCkK,SAAU,SAAClI,EAAMvC,GAAP,OAAcO,E/B0FG,SAACgC,EAAMvC,GAClC,sBAAA2K,EAAAzK,OAAAC,EAAA,EAAAD,CAAAE,EAAA5E,EAAA6E,KAAO,SAAAuK,EAAMrK,GAAN,OAAAH,EAAA5E,EAAAiF,KAAA,SAAAoK,GAAA,cAAAA,EAAAlK,KAAAkK,EAAAjK,MAAA,cAEHL,EAASvB,KAFN6L,EAAAlK,KAAA,EAAAkK,EAAAjK,KAAA,EAKiBC,IAAM0B,KAAN,GAAA5E,OAAcJ,EAAd,gBAAAI,OAAoCqC,GAAMuC,GAL3D,OAAAsI,EAAA9J,KAMCR,EAASrB,KANV2L,EAAAjK,KAAA,gBAAAiK,EAAAlK,KAAA,EAAAkK,EAAA7J,GAAA6J,EAAA,SASCtK,EAASpB,EAAa0L,EAAA7J,GAAEC,UATzB,yBAAA4J,EAAA3J,SAAA0J,EAAA,iBAAP,gBAAAE,GAAA,OAAAH,EAAAvJ,MAAAvE,KAAAwE,YAAA,G+B3FiC0J,CAAgBxI,EAAMvC,KACvDoK,SAAU,SAACpK,GAAD,OAAQO,EAASR,EAAsBC,KACjDX,aAAc,kBAAMkB,EAASlB,QAGlBoH,CAA6CuE,ICmB7CC,oLAlBX,OACE1P,EAAAC,EAAAC,cAACyP,EAAD,KACE3P,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,KACE5P,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAO/O,KAAK,IAAIgP,OAAK,EAACC,UAAW1E,KACjCpL,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAO/O,KAAK,SAASgP,OAAK,EAACC,UAAWhE,KACtC9L,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAO/O,KAAK,WAAWgP,OAAK,EAACC,UAAWC,KAExC/P,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAO/O,KAAK,aAAagP,OAAK,EAACC,UAAW1B,KAC1CpO,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAO/O,KAAK,aAAagP,OAAK,EAACC,UAAWlB,KAC1C5O,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAO/O,KAAK,kBAAkBgP,OAAK,EAACC,UAAWL,KAC/CzP,EAAAC,EAAAC,cAAC0P,EAAA,EAAD,CAAOE,UAAWE,cAbVrO,IAAMC,8CCNlBqO,GAAcC,aAAgB,CAChC3N,MjC6JW,WAAwD,IAAvC4N,EAAuCrK,UAAA2C,OAAA,QAAA2H,IAAAtK,UAAA,GAAAA,UAAA,GAA3B5B,EAAcmM,EAAavK,UAAA2C,OAAA,QAAA2H,IAAAtK,UAAA,GAAAA,UAAA,GAAJ,GAC/D,OAAQuK,EAAO3M,MACX,KAAKR,EACD,OAAOyB,OAAA4I,EAAA,EAAA5I,CAAA,GAAKwL,EAAZ,CAAuBhM,KAAMkM,EAAOrM,UACxC,KAAKb,EACD,OAAOwB,OAAA4I,EAAA,EAAA5I,CAAA,GAAKwL,EAAZ,CAAuBhM,KAAM,GAAIxB,WAAY,GAAIH,QAAS,CAAE4B,SAAS,EAAMP,MAAO,KAAMQ,QAAS,QACrG,KAAKjB,EACD,OAAOuB,OAAA4I,EAAA,EAAA5I,CAAA,GAAKwL,EAAZ,CAAuB3N,QAAS,CAAE4B,SAAS,EAAOP,MAAO,KAAMQ,SAAS,KAC5E,KAAKhB,EACD,OAAOsB,OAAA4I,EAAA,EAAA5I,CAAA,GAAKwL,EAAZ,CAAuB3N,QAAS,CAAE4B,SAAS,EAAOP,MAAOwM,EAAOxM,MAAOQ,SAAS,KACpF,KAAKf,EACD,OAAOqB,OAAA4I,EAAA,EAAA5I,CAAA,GAAKwL,EAAZ,CAAuBxN,WAAY0N,EAAOrM,UAC9C,KAAKT,EACD,OAAOoB,OAAA4I,EAAA,EAAA5I,CAAA,GAAIwL,EAAX,CAAsB3N,QAAS,CAAE4B,SAAS,EAAOP,MAAO,KAAMQ,QAAS,QAC3E,KAAKb,EACD,OAAOmB,OAAA4I,EAAA,EAAA5I,CAAA,GACAwL,EADP,CAEIlN,aAAcoN,EAAOrM,QAAQf,aAC7BqB,YAAa+L,EAAOrM,QAAQM,YAC5BtB,OAAQqN,EAAOrM,QAAQhB,OACvBmB,KAAKQ,OAAAsD,EAAA,EAAAtD,CAAK0L,EAAOrM,QAAQzB,SAEjC,QACI,OAAO4N,MiCxKJG,GARDC,aACVN,GAEIO,aAAgBC,OCNxBC,EAAQ,KAAUC,SAUlBC,IAASC,OAAO7Q,EAAAC,EAAAC,cARH,kBACXF,EAAAC,EAAAC,cAAC4Q,EAAA,EAAD,CAAUR,MAAOA,IACftQ,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACEX,EAAAC,EAAAC,cAAC6Q,GAAD,SAKU,MAAUC,SAASC,eAAe","file":"static/js/main.6b929cdd.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './PageContainer.scss';\r\n\r\nconst PageContainer = ({ children }) => (\r\n  <div className=\"container-fluid\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n\r\n  <ul className=\"main-menu\">\r\n    \r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport styles from './NavBar.scss';\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    links: [\r\n      { path: '/', title: 'Home' },\r\n      { path: '/posts/new', title: 'Add post' },\r\n      { path: '/posts', title: 'Posts' },\r\n      { path: '/contact', title: 'Contact' },\r\n      // { path: '/random', title: 'Random post' }\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n  \r\n    return (\r\n      <nav className=\"navbar\" style={styles}>\r\n        <Logo />\r\n        <MainMenu links={links} />\r\n      </nav>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react'\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;","export const API_URL = process.env.REACT_APP_API || process.env.DB_API;\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL || process.env.DB_BASE;","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\n// action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* SELECTORS */\r\n\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getNumberOfPosts = ({ posts }) => posts.data.length;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const getPresentPage = ({ posts }) => posts.presentPage;\r\nexport const getInitialPage = ({ posts }) => posts.initialPage;\r\n\r\n/* ACTIONS */\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\n\r\n\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const resetRequest = () => ({type: RESET_REQUEST});\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n    data: [],\r\n    request: {\r\n        pending: false,\r\n        error: null,\r\n        success: null,\r\n    },\r\n    singlePost: {},\r\n    amount: 0,\r\n    presentPage: 1,\r\n    initialPage: 1,\r\n};\r\n\r\n/* THUNKS */\r\n\r\nexport const loadPostsRequest = () => {\r\n    return async dispatch => {\r\n        \r\n        dispatch(startRequest());\r\n        try {\r\n            \r\n            let res = await axios.get(`${API_URL}/posts`);\r\n            dispatch(loadPosts(res.data));\r\n            dispatch(endRequest());\r\n    \r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n  \r\n    };\r\n};\r\n\r\nexport const loadSinglePostRequest = (id) => {\r\n    return async dispatch => {\r\n\r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.get(`${API_URL}/posts/${id}`);\r\n            await dispatch(loadSinglePost(res.data[0]));\r\n            dispatch(endRequest());\r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n    }\r\n};\r\n\r\nexport const addPostRequest = (post) => {\r\n    return async dispatch => {\r\n\r\n        dispatch(startRequest());\r\n        try {\r\n    \r\n            let res = await axios.post(`${API_URL}/posts`, post);\r\n            dispatch(endRequest());\r\n    \r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n  \r\n    };\r\n};\r\n\r\nexport const editPostRequest = (post, id) => {\r\n    return async dispatch => {\r\n\r\n        dispatch(startRequest());\r\n        try {\r\n    \r\n            let res = await axios.post(`${API_URL}/posts/edit/${id}`, post);\r\n            dispatch(endRequest());\r\n    \r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n  \r\n    };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPage) => {\r\n    return async dispatch => {\r\n  \r\n        dispatch(startRequest());\r\n        try {\r\n    \r\n            const postsPerPage = postsPage;\r\n    \r\n            const startAt = (page - 1) * postsPerPage;\r\n            const limit = postsPerPage;\r\n    \r\n            let res = await axios.get(`${API_URL}/posts/range/${startAt}/${limit}`);\r\n    \r\n            const payload = {\r\n            posts: res.data.posts,\r\n            amount: res.data.amount,\r\n            postsPerPage,\r\n            presentPage: page,\r\n            };\r\n    \r\n            dispatch(loadPostsByPage(payload));\r\n            dispatch(endRequest());\r\n    \r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n  \r\n    };\r\n};\r\n\r\nexport const loadRandomPostRequest = () => {\r\n    return async dispatch => {\r\n  \r\n        dispatch(startRequest());\r\n        try {\r\n            let res = await axios.get(`${API_URL}/random`);\r\n\r\n            await dispatch(loadSinglePost(res));\r\n            dispatch(endRequest());\r\n\r\n        } catch(e) {\r\n            dispatch(errorRequest(e.message));\r\n        }\r\n\r\n    };\r\n}\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case LOAD_POSTS:\r\n            return { ...statePart, data: action.payload };\r\n        case START_REQUEST:\r\n            return { ...statePart, data: [], singlePost: {}, request: { pending: true, error: null, success: null } };\r\n        case END_REQUEST:\r\n            return { ...statePart, request: { pending: false, error: null, success: true } };\r\n        case ERROR_REQUEST:\r\n            return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n        case LOAD_SINGLE_POST:\r\n            return { ...statePart, singlePost: action.payload };\r\n        case RESET_REQUEST:\r\n            return {...statePart, request: { pending: false, error: null, success: null } };\r\n        case LOAD_POSTS_PAGE:\r\n            return {\r\n                ...statePart,\r\n                postsPerPage: action.payload.postsPerPage,\r\n                presentPage: action.payload.presentPage,\r\n                amount: action.payload.amount,\r\n                data: [...action.payload.posts],\r\n            };\r\n        default:\r\n            return statePart;\r\n    }\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SmallTitle.scss';\r\n\r\nconst SmallTitle = ({ children, ...otherProps }) => (\r\n  <h2 {...otherProps} className=\"small-title\">\r\n    { children }\r\n  </h2>\r\n);\r\n\r\nSmallTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SmallTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n    <span {...otherProps} className=\"html-box\">\r\n      {ReactHtmlParser(children)}\r\n    </span>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\n\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({ id, title, content, cutText, author }) => (\r\n  <article className=\"post-summary\">\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n    <p>Author: {author}</p>\r\n    <Button variant=\"primary\">\r\n      <Link to={'posts/' + id}>\r\n        Read more\r\n      </Link>\r\n    </Button>\r\n    <Button variant=\"primary\">\r\n      <Link to={'posts/edit/' + id}>\r\n        Edit\r\n      </Link>\r\n    </Button>\r\n  </article>\r\n);\r\n\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string,\r\n};\r\n\r\nexport default PostSummary;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts, cutText }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => <PostSummary cutText={cutText} key={post.id} {...post} />)}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\r\nimport { Animated } from 'react-animated-css';\r\n\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => (\r\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </Animated>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n    changePage = (newPage) => {\r\n        const { onPageChange } = this.props;\r\n\r\n        onPageChange(newPage);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { pages, presentPage } = this.props;\r\n        const { changePage } = this;\r\n        return (\r\n            <div className=\"pagination\">\r\n                \r\n                <ul className=\"pagination__list\">\r\n\r\n                    <span onClick={() => {changePage(presentPage - 1)}}>\r\n                        {presentPage !== 1 ? '<' : ''}\r\n                    </span>\r\n            \r\n                    {[...Array(pages)].map((el, page) =>\r\n                        <li\r\n                            key={++page}\r\n                            onClick={() => { changePage(page) }}\r\n                            className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n                            {page}\r\n                        </li>\r\n                    )}\r\n            \r\n                    <span onClick={() => {changePage(presentPage + 1)}}>\r\n                        {presentPage !== pages && presentPage !== 0 ? '>' : ''}\r\n                    </span>\r\n\r\n                </ul>\r\n\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nPagination.propTypes = {\r\n    pages: PropTypes.number.isRequired,\r\n    initialPage: PropTypes.number,\r\n    onPageChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\n\r\nclass PostsPattern extends React.Component {\r\n\r\n    render() {\r\n        const { posts, request, pages, presentPage, pagination, cutText, loadPostsPage } = this.props;\r\n\r\n        if (request.pending || request.success === null) return <Spinner />\r\n        else if (!request.pending && request.error !== null) return <Alert variant={'error'} children={request.error} />\r\n        else if (!request.pending && request.success && posts.length === 0) return <Alert variant={'info'} children={'no posts'} />\r\n        else if (!request.pending && request.success && posts.length > 0) return (\r\n            <div>      \r\n                <PostsList posts={posts} cutText={cutText} />\r\n                { pagination ? <Pagination presentPage={presentPage} pages={pages} onPageChange={loadPostsPage} /> : '' }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nPostsPattern.propTypes = {\r\n    posts: PropTypes.array.isRequired,\r\n    request: PropTypes.object.isRequired,\r\n    pages: PropTypes.number.isRequired,\r\n    presentPage: PropTypes.number.isRequired,\r\n    pagination: PropTypes.bool.isRequired,\r\n    cutText: PropTypes.func.isRequired,\r\n    loadPostsPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostsPattern;","import React from 'react';\r\n\r\nfunction withPage(WrappedComponent, postsPerPage, pagination) {\r\n    return class extends React.Component {\r\n\r\n        state = {\r\n            pagination: pagination,\r\n            postsPerPage: postsPerPage\r\n        }\r\n\r\n        componentDidMount() {\r\n            const { loadPostsByPage, resetRequest, initialPage } = this.props;\r\n            const { postsPerPage } = this.state;\r\n        \r\n            resetRequest();\r\n            loadPostsByPage(!initialPage ? 1 : initialPage, postsPerPage);\r\n        }\r\n        \r\n        loadPostsPage = (page) => {\r\n            const { loadPostsByPage } = this.props;\r\n            const { postsPerPage } = this.state;\r\n            loadPostsByPage(page, postsPerPage);\r\n        }\r\n        \r\n        cutText = (content, maxLength) => {\r\n        \r\n            if (maxLength < 1) {\r\n              return 'Error';\r\n            } else if (maxLength > content.length) {\r\n              const arr = content.split('');\r\n              const lastIndex = arr.lastIndexOf(' ', maxLength);\r\n              const newContent = content.substr(0, lastIndex);\r\n              return newContent + '...';\r\n            } else {\r\n              return content;\r\n            }\r\n        }\r\n\r\n        \r\n        render() {\r\n            const { pagination, postsPerPage } = this.state;\r\n            const { posts, request, pages, presentPage } = this.props;\r\n            const { loadPostsPage, cutText } = this;\r\n            \r\n            return <WrappedComponent \r\n                pagination={pagination} \r\n                postsPerPage={postsPerPage} \r\n                posts={posts}\r\n                request={request}\r\n                pages={pages}\r\n                presentPage={presentPage}\r\n                loadPostsPage={loadPostsPage}\r\n                cutText={cutText}\r\n                {...this.props} />\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport default withPage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostsPattern from '../PostsPattern/PostsPattern';\r\nimport withPage from '../withPage/withPage';\r\n\r\nconst Posts = (props) => {\r\n\r\n  const { posts, request, pages, presentPage, pagination, loadPostsPage, cutText } = props;\r\n  \r\n  return (\r\n    <div>\r\n      <PostsPattern posts={posts} request={request} pages={pages} presentPage={presentPage} pagination={pagination} loadPostsPage={loadPostsPage} cutText={cutText} />\r\n    </div>\r\n  );\r\n}\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n  request: PropTypes.object.isRequired,\r\n  loadPostsByPage: PropTypes.func.isRequired,\r\n  resetRequest: PropTypes.func.isRequired,\r\n  presentPage: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withPage(Posts, 10, true);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './PageTitle.scss';\r\n\r\nconst PageTitle = ({ children }) => (\r\n  <h1 className=\"page-title\">\r\n     {children}\r\n  </h1>\r\n);\r\n\r\nPageTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsPattern from '../../features/PostsPattern/PostsPattern';\r\nimport withPage from '../../features/withPage/withPage';\r\n\r\nconst HomePage = (props) => {\r\n\r\n  const { posts, request, pages, presentPage, pagination, loadPostsPage, cutText } = props;\r\n  \r\n  return (\r\n    <div>\r\n      <PageTitle>Blog</PageTitle>\r\n      <PostsPattern posts={posts} request={request} pages={pages} presentPage={presentPage} pagination={pagination} loadPostsPage={loadPostsPage} cutText={cutText} />\r\n    </div>\r\n  );\r\n}\r\n\r\nHomePage.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n  request: PropTypes.object.isRequired,\r\n  pages: PropTypes.number.isRequired,\r\n  loadPostsPage: PropTypes.func.isRequired,\r\n  cutText: PropTypes.func.isRequired,\r\n  presentPage: PropTypes.number.isRequired,\r\n  pagination: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withPage(HomePage, 3, false);","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, loadPostsByPageRequest, getPages, resetRequest, getPresentPage, getInitialPage } from '../../../redux/postsRedux';\r\n\r\nimport Posts from './Posts';\r\nimport HomePage from '../../pages/Home/HomePage';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  presentPage: getPresentPage(state),\r\n  initialPage: getInitialPage(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(HomePage);","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n  render() {\r\n    const { postsCount, request } = this.props;\r\n\r\n    if (request.success) {\r\n      return (\r\n        <div>Posts amount: { postsCount > 0 ? postsCount : 'no posts' }</div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n};\r\n\r\nPostsCounter.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n      })\r\n    )\r\n};\r\n\r\nexport default PostsCounter;\r\n","import { connect } from 'react-redux';\r\nimport { getNumberOfPosts, getRequest, loadPostsRequest } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n  postsCount: getNumberOfPosts(state),\r\n  request: getRequest(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPosts: () => dispatch(loadPostsRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsCounter);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounter />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Kontakt</PageTitle>\r\n    <p>Your Favourite Blooger Ltd.</p>\r\n    <p>9432 Division Street</p>\r\n    <p>Stone Mountain, GA 30083</p>\r\n\r\n    <p>Mobile Number: 207-914-3411</p>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport '../PostForm/PostForm.scss';\r\n\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nconst FormOfPosts = (props) => {\r\n\r\n    const { post, request, handleChange, handleEditor, formFunc } = props;\r\n\r\n    if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n    else if(request.pending) return <Spinner />\r\n    else return (\r\n\r\n        <form onSubmit={formFunc}>\r\n    \r\n            <TextField\r\n                label=\"Title\"\r\n                value={post.title}\r\n                onChange={handleChange}\r\n                name=\"title\"\r\n            />\r\n    \r\n            <TextField\r\n                label=\"Author\"\r\n                value={post.author}\r\n                onChange={handleChange}\r\n                name=\"author\"\r\n            />\r\n    \r\n            <SectionTitle>Edit post content</SectionTitle>\r\n    \r\n            <Editor\r\n                className=\"content-editor\"\r\n                text={post.content}\r\n                onChange={handleEditor}\r\n                options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n            />\r\n    \r\n            <Button variant=\"primary\">Add post</Button>\r\n    \r\n        </form>\r\n    );\r\n}\r\n\r\nFormOfPosts.propTypes = {\r\n    request: PropTypes.object.isRequired,\r\n    post: PropTypes.object,\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleEditor: PropTypes.func.isRequired,\r\n    formFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FormOfPosts;","import React from 'react';\r\n\r\nfunction withPost(WrappedComponent) {\r\n    return class extends React.Component {\r\n    \r\n        state = {\r\n            post: {\r\n            title: '',\r\n            author: '',\r\n            content: ''\r\n            }\r\n        }\r\n    \r\n        handleChange = (e) => {\r\n            const { post } = this.state;\r\n            this.setState({ post: { ...post, [e.target.name]: e.target.value }});\r\n        }\r\n    \r\n        handleEditor = (text) => {\r\n            const { post } = this.state;\r\n            this.setState({ post: { ...post, content: text }});\r\n        }\r\n\r\n        fillUpState = (data) => {\r\n            this.setState({ post: { title: data.title, author: data.author, content: data.content }})\r\n        }\r\n    \r\n        render() {\r\n            return <WrappedComponent post={this.state.post} handleChange={this.handleChange} handleEditor={this.handleEditor} fillUpState={this.fillUpState} {...this.props} />;\r\n        }\r\n    };\r\n}\r\n\r\nexport default withPost;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport Alert from '../../common/Alert/Alert';\r\n\r\nimport FormOfPosts from '../FormOfPosts/FormOfPosts';\r\nimport withPost from '../withPost/withPost';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  addPost = (e) => {\r\n    const { addPost, post } = this.props;\r\n  \r\n    e.preventDefault();\r\n    addPost(post);\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { addPost } = this;\r\n    const { request, post, handleChange, handleEditor } = this.props;\r\n\r\n    if(request.success) return <Alert variant=\"success\">Post has been added!</Alert>\r\n    else return <FormOfPosts formFunc={addPost} request={request} post={post} handleChange={handleChange} handleEditor={handleEditor} />\r\n\r\n  }\r\n};\r\n\r\nPostForm.propTypes = {\r\n    request: PropTypes.object.isRequired,\r\n    resetRequest: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleEditor: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withPost(PostForm);","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: (post) => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import React from 'react';\r\nimport PostForm from '../PostForm/PostFormContainer';\r\n\r\nconst AddPost = () => (\r\n  <div>\r\n    <PostForm />\r\n  </div>\r\n);\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { BASE_URL } from '../../../config';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\n\r\n\r\nconst SinglePostForm = (props) => {\r\n\r\n    const { post, request, location } = props;\r\n    \r\n    if (request.pending || request.success === null) return <Spinner />\r\n    else if (!request.pending && request.error !== null) return <Alert variant={'error'} children={request.error} />\r\n    else if (!request.pending && request.success && Object.keys(post).length === 0) return <Alert variant={'info'} children={'no posts'} />\r\n    else if (!request.pending && request.success && Object.keys(post).length > 0)\r\n    return (\r\n      <div>\r\n        <PageTitle>{ post.title }</PageTitle>\r\n        <p>Author: { post.author }</p>\r\n        <HtmlBox>{ post.content }</HtmlBox>\r\n\r\n        <FacebookProvider appId={process.env.REACT_APP_DB_FACEID || process.env.DB_FACEID}>\r\n          <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n          <ShareButton href={`${BASE_URL}/${location.pathname}`}>\r\n            Share\r\n          </ShareButton>\r\n        </FacebookProvider>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nSinglePostForm.propTypes = {\r\n    post: PropTypes.object,\r\n    request: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(props => <SinglePostForm {...props}/>);","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport SinglePostForm from '../SinglePostForm/SinglePostForm';\r\n\r\nclass SinglePost extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { loadPost, resetRequest } = this.props;\r\n    resetRequest();\r\n    loadPost(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { post, request } = this.props;\r\n    \r\n    return <SinglePostForm post={post} request={request} />\r\n  }\r\n}\r\n\r\nSinglePost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  request: PropTypes.object.isRequired,\r\n  loadPost: PropTypes.func.isRequired,\r\n  resetRequest: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SinglePost;","import { connect } from 'react-redux';\r\nimport { getSinglePost, getRequest, loadSinglePostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n    post: getSinglePost(state),\r\n    request: getRequest(state),\r\n  });\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    loadPost: (id) => dispatch(loadSinglePostRequest(id)),\r\n    resetRequest: () => dispatch(resetRequest()),\r\n  });\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","    \r\nimport React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport Alert from '../../common/Alert/Alert';\r\n\r\nimport withPost from '../withPost/withPost';\r\nimport FormOfPosts from '../FormOfPosts/FormOfPosts';\r\n\r\nclass EditPost extends React.Component {\r\n    state = {\r\n        edited: false,\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { loadPost, resetRequest, fillUpState } = this.props;\r\n        resetRequest();\r\n        await loadPost(this.props.match.params.id);\r\n        const { singlePost } = this.props;\r\n        await fillUpState(singlePost);\r\n    }\r\n\r\n    editPost = (e) => {\r\n        const { editPost, request, post } = this.props;\r\n      \r\n        e.preventDefault();\r\n        editPost(post, this.props.match.params.id);\r\n        if(request.success) return this.setState({ edited: true });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { request, handleChange, handleEditor, post } = this.props;\r\n        const { edited } = this.state;\r\n        const { editPost } = this;\r\n\r\n        if(request.success && edited) return <Alert variant=\"success\">Post has been added!</Alert>\r\n        else return <FormOfPosts formFunc={editPost} request={request} post={post} handleChange={handleChange} handleEditor={handleEditor} />\r\n    }\r\n}\r\n\r\nEditPost.propTypes = {\r\n    request: PropTypes.object.isRequired,\r\n    post: PropTypes.object.isRequired,\r\n    singlePost: PropTypes.object.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleEditor: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withPost(EditPost);","import { connect } from 'react-redux';\r\nimport { getRequest, resetRequest, getSinglePost, loadSinglePostRequest, editPostRequest } from '../../../redux/postsRedux';\r\nimport EditPost from './EditPost';\r\n\r\nconst mapStateToProps = state => ({\r\n    singlePost: getSinglePost(state),\r\n    request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    editPost: (post, id) => dispatch(editPostRequest(post, id)),\r\n    loadPost: (id) => dispatch(loadSinglePostRequest(id)),\r\n    resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPost);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport MainLayout from './components/layout/MainLayout/MainLayout';\r\nimport { Home } from './components/features/Posts/PostsContainer';\r\nimport PostsPage from './components/pages/Posts/PostsPage';\r\nimport Contact from './components/pages/Contact/ContactPage';\r\nimport NotFound from './components/pages/NotFound/NotFoundPage';\r\n// import RandomPost from './components/pages/RandomPost/RandomPostContainer';\r\nimport AddPost from './components/features/AddPost/AddPost';\r\nimport SinglePost from './components/features/SinglePost/SinglePostContainer';\r\nimport EditPost from './components/features/EditPost/EditPostContainer';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/posts\" exact component={PostsPage} />\r\n          <Route path=\"/contact\" exact component={Contact} />\r\n          {/* <Route path=\"/random\" exact component={RandomPost} /> */}\r\n          <Route path=\"/posts/new\" exact component={AddPost} />\r\n          <Route path=\"/posts/:id\" exact component={SinglePost} />\r\n          <Route path=\"/posts/edit/:id\" exact component={EditPost} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </MainLayout>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import reducers\r\nimport posts from './postsRedux';\r\n\r\n// combine reducers\r\nconst rootReducer = combineReducers({\r\n    posts,\r\n  });\r\n\r\n// create store\r\nconst store = createStore(\r\n    rootReducer,\r\n    // compose(\r\n        applyMiddleware(thunk)\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    // )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/global.scss';\r\nimport 'animate.css/animate.min.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nrequire('dotenv').config();\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n  \r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}